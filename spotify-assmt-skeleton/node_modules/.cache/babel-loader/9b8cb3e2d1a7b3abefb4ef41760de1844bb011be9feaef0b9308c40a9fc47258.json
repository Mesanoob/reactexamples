{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/generation/react/reactexamples/spotify-assmt-skeleton/src/app/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport SearchBar from \"../components/searchbar/SearchBar.jsx\";\nimport SearchResults from \"../components/searchresults/SearchResults.jsx\";\nimport Playlist from \"../components/playlist/Playlist.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // create state hooks that manages the characteristics of our application\n  const [searchResults, setsearchResults] = useState([]);\n  const [playlistName, setplayListName] = useState(\"Create New Playlist\");\n  const [playListTracks, setplayListTracks] = useState([]);\n\n  // at the start of this app component, provide default values for searchResults (lifecycle hook)\n  useEffect(() => {\n    setsearchResults([{\n      id: 1,\n      name: \"Track 1\",\n      artist: \"Track 1 Artist\",\n      album: \"Track 1 Album\"\n    }, {\n      id: 2,\n      name: \"Track 2\",\n      artist: \"Track 2 Artist\",\n      album: \"Track 2 Album\"\n    }, {\n      id: 3,\n      name: \"Track 3\",\n      artist: \"Track 3 Artist\",\n      album: \"Track 3 Album\"\n    }]);\n  }, []);\n  function addTrack(track) {\n    const existTrack = playListTracks.find(currentTrack => track.id === currentTrack.id);\n    if (!existTrack) {\n      setplayListTracks([...playListTracks, track]);\n      return;\n    }\n  }\n  console.log(playListTracks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          searchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7Oig3YbcKfpMdtaIqMDBfcLqUTE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","SearchBar","SearchResults","Playlist","jsxDEV","_jsxDEV","App","_s","searchResults","setsearchResults","playlistName","setplayListName","playListTracks","setplayListTracks","id","name","artist","album","addTrack","track","existTrack","find","currentTrack","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","_c","$RefreshReg$"],"sources":["/Users/dave/Documents/generation/react/reactexamples/spotify-assmt-skeleton/src/app/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport SearchBar from \"../components/searchbar/SearchBar.jsx\";\nimport SearchResults from \"../components/searchresults/SearchResults.jsx\";\nimport Playlist from \"../components/playlist/Playlist.jsx\";\n\nfunction App() {\n  // create state hooks that manages the characteristics of our application\n  const [searchResults, setsearchResults] = useState([]);\n  const [playlistName, setplayListName] = useState(\"Create New Playlist\");\n  const [playListTracks, setplayListTracks] = useState([]);\n\n  // at the start of this app component, provide default values for searchResults (lifecycle hook)\n  useEffect(() => {\n    setsearchResults([\n      {\n        id: 1,\n        name: \"Track 1\",\n        artist: \"Track 1 Artist\",\n        album: \"Track 1 Album\",\n      },\n      {\n        id: 2,\n        name: \"Track 2\",\n        artist: \"Track 2 Artist\",\n        album: \"Track 2 Album\",\n      },\n      {\n        id: 3,\n        name: \"Track 3\",\n        artist: \"Track 3 Artist\",\n        album: \"Track 3 Album\",\n      },\n    ]);\n  }, []);\n\n  function addTrack(track) {\n    const existTrack = playListTracks.find(\n      (currentTrack) => track.id === currentTrack.id\n    );\n    if (!existTrack) {\n      setplayListTracks([...playListTracks, track]);\n      return;\n    }\n  }\n  console.log(playListTracks);\n\n  return (\n    <div>\n      <h1>\n        Ja<span className=\"highlight\">mmm</span>ing\n      </h1>\n      <div className=\"App\">\n        {/* <!-- Add a SearchBar component --> */}\n        <SearchBar />\n        <div className=\"App-playlist\">\n          {/* <!-- Add a SearchResults component --> */}\n          <SearchResults searchResults={searchResults} onAdd={addTrack} />\n          {/* <!-- Add a Playlist component --> */}\n          <Playlist />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,OAAOC,aAAa,MAAM,+CAA+C;AACzE,OAAOC,QAAQ,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,qBAAqB,CAAC;EACvE,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACdS,gBAAgB,CAAC,CACf;MACEK,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,gBAAgB;MACxBC,KAAK,EAAE;IACT,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,gBAAgB;MACxBC,KAAK,EAAE;IACT,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,gBAAgB;MACxBC,KAAK,EAAE;IACT,CAAC,CACF,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,QAAQA,CAACC,KAAK,EAAE;IACvB,MAAMC,UAAU,GAAGR,cAAc,CAACS,IAAI,CACnCC,YAAY,IAAKH,KAAK,CAACL,EAAE,KAAKQ,YAAY,CAACR,EAC9C,CAAC;IACD,IAAI,CAACM,UAAU,EAAE;MACfP,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEO,KAAK,CAAC,CAAC;MAC7C;IACF;EACF;EACAI,OAAO,CAACC,GAAG,CAACZ,cAAc,CAAC;EAE3B,oBACEP,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,GAAI,IACA,eAAApB,OAAA;QAAMqB,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,OAC1C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLzB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAElBpB,OAAA,CAACJ,SAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbzB,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAE3BpB,OAAA,CAACH,aAAa;UAACM,aAAa,EAAEA,aAAc;UAACuB,KAAK,EAAEb;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEhEzB,OAAA,CAACF,QAAQ;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA1DQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}