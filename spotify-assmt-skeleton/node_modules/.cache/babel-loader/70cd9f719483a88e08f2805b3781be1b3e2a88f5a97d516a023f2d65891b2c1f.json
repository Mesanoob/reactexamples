{"ast":null,"code":"var _jsxFileName = \"/Users/dave/Documents/generation/react/reactexamples/spotify-assmt-skeleton/src/components/tracklist/Tracklist.jsx\";\nimport React from \"react\";\nimport \"./Tracklist.css\";\nimport Track from \"../track/Track.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tracklist({\n  searchResults,\n  isRemoval\n}) {\n  // id: 1,\n  // name: \"track 1\",\n  // artist: \"track 1 artist\",\n  // album: \"track 1 albumb\"\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TrackList\",\n    children: [\"// The ? is a SAFE NAVIGATION OPERATOR to only run the map operation when searchResults has data\", searchResults === null || searchResults === void 0 ? void 0 : searchResults.map(track => {\n      /*#__PURE__*/_jsxDEV(Track, {\n        track: track,\n        isRemoval: isRemoval\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = Tracklist;\nexport default Tracklist;\nvar _c;\n$RefreshReg$(_c, \"Tracklist\");","map":{"version":3,"names":["React","Track","jsxDEV","_jsxDEV","Tracklist","searchResults","isRemoval","className","children","map","track","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dave/Documents/generation/react/reactexamples/spotify-assmt-skeleton/src/components/tracklist/Tracklist.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./Tracklist.css\";\nimport Track from \"../track/Track.jsx\";\n\nfunction Tracklist({ searchResults, isRemoval }) {\n  // id: 1,\n  // name: \"track 1\",\n  // artist: \"track 1 artist\",\n  // album: \"track 1 albumb\"\n\n  return (\n    <div className=\"TrackList\">\n      {/* <!-- You will add a map method that renders a set of Track components  --> */}\n      // The ? is a SAFE NAVIGATION OPERATOR to only run the map operation when\n      searchResults has data\n      {searchResults?.map((track) => {\n        <Track track={track} key={track.id} isRemoval={isRemoval} />;\n      })}\n    </div>\n  );\n}\n\nexport default Tracklist;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,EAAE;EAC/C;EACA;EACA;EACA;;EAEA,oBACEH,OAAA;IAAKI,SAAS,EAAC,WAAW;IAAAC,QAAA,GAC0D,kGAGlF,EAACH,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEI,GAAG,CAAEC,KAAK,IAAK;MAC7B,aAAAP,OAAA,CAACF,KAAK;QAACS,KAAK,EAAEA,KAAM;QAAgBJ,SAAS,EAAEA;MAAU,GAA/BI,KAAK,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CAAC;IAC9D,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAhBQZ,SAAS;AAkBlB,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}